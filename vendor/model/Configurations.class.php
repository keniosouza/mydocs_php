<?php/** Defino o local onde esta a classe */namespace vendor\model;class Configurations{    /** Declaro as variavéis da classe */    private $connection = null;    private $sql = null;    private $stmt = null;    private $configuration_id = null;    private $nickname = null;    private $name_business = null;    private $name_fantasy = null;    private $cnpj = null;    private $site = null;    private $telephone = null;    private $cellphone = null;    private $email = null;    private $responsible = null;    private $responsible_office = null;    private $cep = null;    private $state_id = null;    private $city_id = null;    private $district = null;    private $complement = null;    private $preferences = null;    private $history = null;    /** Construtor da classe */    function __construct()    {        /** Cria o objeto de conexão com o banco de dados */        $this->connection = new MySql();    }    /** Salvo ou atualizo um registro */    public function Save($configuration_id, $nickname, $name_business, $name_fantasy, $cnpj, $site, $telephone, $cellphone, $email, $responsible, $responsible_office, $cep, $state_id, $city_id, $complement, $history): bool    {        /** Parâmetros de Entrada */        $this->configuration_id = $configuration_id;        $this->nickname = $nickname;        $this->name_business = $name_business;        $this->name_fantasy = $name_fantasy;        $this->cnpj = $cnpj;        $this->site = $site;        $this->telephone = $telephone;        $this->cellphone = $cellphone;        $this->email = $email;        $this->responsible = $responsible;        $this->responsible_office = $responsible_office;        $this->cep = $cep;        $this->state_id = $state_id;        $this->city_id = $city_id;        $this->complement = $complement;        $this->history = $history;        /** Verifico o tipo de operação */        if ($this->configuration_id === 0)        {            /** Consulta SQL */            $this->sql = 'INSERT INTO configurations(configuration_id,                                                     nickname,                                                     name_business,                                                     name_fantasy,                                                     cnpj,                                                     site,                                                     telephone,                                                     cellphone,                                                     email,                                                     responsible,                                                     responsible_office,                                                     cep,                                                     state_id,                                                     city_id,                                                     complement,                                                     history)                                                     VALUES(:configuration_id,                                                            :nickname,                                                            :name_business,                                                            :name_fantasy,                                                            :cnpj,                                                            :site,                                                            :telephone,                                                            :cellphone,                                                            :email,                                                            :responsible,                                                            :responsible_office,                                                            :cep,                                                            :state_id,                                                            :city_id,                                                            :complement,                                                            :history);';        }        else        {            /** Consulta SQL */            $this->sql = 'UPDATE configurations SET                           nickname = :nickname,                          name_business = :name_business,                          name_fantasy = :name_fantasy,                          cnpj = :cnpj,                          site = :site,                          telephone = :telephone,                          cellphone = :cellphone,                          email = :email,                          responsible = :responsible,                          responsible_office = :responsible_office,                          cep = :cep,                          state_id = :state_id,                          city_id = :city_id,                          complement = :complement,                          history = :history                          WHERE configuration_id = :configuration_id';        }        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':configuration_id', $this->configuration_id);        $this->stmt->bindParam(':nickname', $this->nickname);        $this->stmt->bindParam(':name_business', $this->name_business);        $this->stmt->bindParam(':name_fantasy', $this->name_fantasy);        $this->stmt->bindParam(':cnpj', $this->cnpj);        $this->stmt->bindParam(':site', $this->site);        $this->stmt->bindParam(':telephone', $this->telephone);        $this->stmt->bindParam(':cellphone', $this->cellphone);        $this->stmt->bindParam(':email', $this->email);        $this->stmt->bindParam(':responsible', $this->responsible);        $this->stmt->bindParam(':responsible_office', $this->responsible_office);        $this->stmt->bindParam(':cep', $this->cep);        $this->stmt->bindParam(':state_id', $this->state_id);        $this->stmt->bindParam(':city_id', $this->city_id);        $this->stmt->bindParam(':complement', $this->complement);        $this->stmt->bindParam(':history', $this->history);        /** Executo o SQL */        return $this->stmt->execute();    }    /** Salvo ou atualizo um registro */    public function SavePreference($configuration_id, $preferences): bool    {        /** Parâmetros de Entrada */        $this->configuration_id = $configuration_id;        $this->preferences = $preferences;        /** Consulta SQL */        $this->sql = 'UPDATE configurations SET preferences = :preferences WHERE configuration_id = :configuration_id';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':configuration_id', $this->configuration_id);        $this->stmt->bindParam(':preferences', $this->preferences);        /** Executo o SQL */        return $this->stmt->execute();    }    /** Consulta de um registro especifico */    public function Get(int $configurationId)    {        /** Parâmetros de Entrada */        $this->configurationId = $configurationId;        /** Consulta SQL */        $this->sql = 'SELECT * FROM configurations WHERE configuration_id = :configurationId;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':configurationId', $this->configurationId);        /** Executo o SQL */        $this->stmt->execute();        /** Retorno o resultado */        return $this->stmt->fetchObject();    }    /** Remoção de um registro especifico */    public function Delete(int $configurationId): bool    {        /** Parâmetros de Entrada */        $this->configurationId = $configurationId;        /** Consulta SQL */        $this->sql = 'DELETE FROM configurations WHERE configuration_id = :configurationId;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':configurationId', $this->configurationId);        /** Executo o SQL */        return $this->stmt->execute();    }    /** Listagem de todos os registros */    public function All()    {        /** Consulta SQL */        $this->sql = 'SELECT * FROM configurations ORDER BY configuration_id DESC LIMIT 1;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Executo o SQL */        $this->stmt->execute();        /** Retorno o resultado */        return $this->stmt->fetchObject();    }    /** Fecha uma conexão aberta anteriormente com o banco de dados */    function __destruct()    {        $this->connection = null;    }}